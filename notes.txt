Notes for implementing lambda calculus in Haskell
------------------------------------------------

three terms:
  variable
  abstraction
  application



questions to ask in office hours:

  basic structure will include a parser and a recursive evaluation function.
  the evaluation function needs to call substitution ??
  need to define an environment. does the closure piece need to be separate? 

  there's not really arithmetic operations in a lambda calc??? just substitution????

  eventually will have some tests
